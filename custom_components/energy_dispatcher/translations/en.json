{
  "config": {
    "step": {
      "user": {
        "title": "Energy Dispatcher Configuration",
        "description": "Configure price enrichment, battery, EV charging, and solar forecast.",
        "data": {
          "nordpool_entity": "Nordpool Spot Price Sensor",
          "price_tax": "Energy Tax (SEK/kWh)",
          "price_transfer": "Grid Transfer Fee (SEK/kWh)",
          "price_surcharge": "Supplier Surcharge (SEK/kWh)",
          "price_vat": "VAT Rate (0-1)",
          "price_fixed_monthly": "Fixed Monthly Fee (SEK)",
          "price_include_fixed": "Include Fixed Fee in Hourly Price",
          "batt_cap_kwh": "Battery Capacity (kWh)",
          "batt_soc_entity": "Battery State of Charge Sensor (%)",
          "batt_max_charge_w": "Max Charge Power (W)",
          "batt_max_disch_w": "Max Discharge Power (W)",
          "batt_adapter": "Battery Adapter Type",
          "huawei_device_id": "Huawei Device ID",
          "batt_capacity_entity": "Battery Capacity Sensor (kWh)",
          "batt_energy_charged_today_entity": "Battery Energy Charged Today (kWh)",
          "batt_energy_discharged_today_entity": "Battery Energy Discharged Today (kWh)",
          "house_cons_sensor": "House Consumption Sensor (Legacy)",
          "ev_mode": "EV Charging Mode",
          "ev_batt_kwh": "EV Battery Capacity (kWh)",
          "ev_current_soc": "EV Current State of Charge (%)",
          "ev_target_soc": "EV Target State of Charge (%)",
          "evse_start_switch": "EVSE Start Switch/Button Entity",
          "evse_stop_switch": "EVSE Stop Switch/Button Entity",
          "evse_current_number": "EVSE Current Control Entity",
          "evse_min_a": "EVSE Minimum Current (A)",
          "evse_max_a": "EVSE Maximum Current (A)",
          "evse_phases": "EVSE Number of Phases",
          "evse_voltage": "EVSE Voltage (V)",
          "fs_use": "Enable Solar Forecasting",
          "forecast_source": "Forecast Source",
          "fs_apikey": "Forecast.Solar API Key (Optional)",
          "fs_lat": "Latitude",
          "fs_lon": "Longitude",
          "fs_planes": "Solar Panel Array Configuration (JSON)",
          "fs_horizon": "Horizon Values (comma-separated)",
          "weather_entity": "Weather Entity",
          "cloud_0_factor": "Clear Sky Factor (0% clouds)",
          "cloud_100_factor": "Overcast Factor (100% clouds)",
          "manual_step_minutes": "Manual Forecast Time Step",
          "manual_diffuse_sky_view_factor": "Diffuse Sky View Factor",
          "manual_temp_coeff_pct_per_c": "Temperature Coefficient (%/°C)",
          "manual_inverter_ac_kw_cap": "Inverter AC Capacity (kW)",
          "manual_calibration_enabled": "Enable Manual Calibration",
          "pv_power_entity": "PV Current Power Sensor (W or kW)",
          "pv_energy_today_entity": "PV Energy Today Sensor (kWh or Wh)",
          "runtime_source": "Baseline Load Calculation Method",
          "runtime_counter_entity": "House Energy Counter (kWh)",
          "runtime_power_entity": "Power Sensor (W)",
          "load_power_entity": "House Load Power Sensor (W)",
          "batt_power_entity": "Battery Power Sensor (W)",
          "batt_power_invert_sign": "Invert Battery Power Sign",
          "grid_import_today_entity": "Grid Import Today Sensor (kWh)",
          "runtime_alpha": "EMA Smoothing Factor (0-1)",
          "runtime_window_min": "Calculation Window (minutes)",
          "runtime_lookback_hours": "Historical Lookback Period (hours)",
          "runtime_use_dayparts": "Use Time-of-Day Weighting",
          "runtime_exclude_ev": "Exclude EV Charging from Baseline",
          "runtime_exclude_batt_grid": "Exclude Battery Grid Charging from Baseline",
          "runtime_soc_floor": "Battery SOC Floor (%)",
          "runtime_soc_ceiling": "Battery SOC Ceiling (%)",
          "evse_power_sensor": "EVSE Charging Power Sensor (W or kW)",
          "evse_energy_sensor": "EVSE Session Energy Sensor (kWh or Wh)",
          "evse_total_energy_sensor": "EVSE Total Energy Counter (kWh)",
          "pv_total_energy_entity": "PV Total Energy Counter (kWh)",
          "batt_total_charged_energy_entity": "Battery Total Charged Energy Counter (kWh)",
          "auto_create_dashboard": "Auto-create Dashboard"
        },
        "data_description": {
          "nordpool_entity": "Select your Nordpool spot price sensor (e.g., sensor.nordpool_kwh_se3_sek_3_10_025)",
          "price_tax": "Energy tax charged by the government per kWh",
          "price_transfer": "Cost for transferring electricity through the grid per kWh",
          "price_surcharge": "Additional surcharge from your electricity supplier per kWh",
          "price_vat": "Value Added Tax rate (e.g., 0.25 for 25%)",
          "price_fixed_monthly": "Fixed monthly fee from your electricity contract",
          "price_include_fixed": "Distribute the fixed monthly fee across hourly prices",
          "batt_cap_kwh": "Total usable capacity of your home battery in kWh",
          "batt_soc_entity": "Sensor that reports current battery state of charge as percentage",
          "batt_max_charge_w": "Maximum charging power in watts",
          "batt_max_disch_w": "Maximum discharge power in watts",
          "batt_adapter": "Adapter for controlling your battery system",
          "huawei_device_id": "Device ID for Huawei battery systems",
          "house_cons_sensor": "Optional legacy sensor for house consumption monitoring",
          "ev_mode": "Currently only manual mode is supported",
          "ev_batt_kwh": "Total battery capacity of your electric vehicle",
          "ev_current_soc": "Current state of charge of your EV battery",
          "ev_target_soc": "Desired state of charge for your EV",
          "evse_start_switch": "Switch or button entity to start EV charging",
          "evse_stop_switch": "Switch or button entity to stop EV charging",
          "evse_current_number": "Number entity to control charging current in Amperes",
          "evse_min_a": "Minimum charging current supported by your EVSE",
          "evse_max_a": "Maximum charging current supported by your EVSE",
          "evse_phases": "Number of phases available (1 or 3)",
          "evse_voltage": "Line voltage at your location (typically 230V in Europe)",
          "fs_use": "Enable solar power forecasting. Works with both Forecast.Solar and Manual Physics forecast sources",
          "forecast_source": "Choose between Forecast.Solar API or Manual Physics-based forecasting",
          "fs_apikey": "Optional API key for enhanced Forecast.Solar features (only used with forecast_solar source)",
          "fs_lat": "Latitude of your solar installation location",
          "fs_lon": "Longitude of your solar installation location",
          "fs_planes": "JSON array describing your solar panel arrays with declination, azimuth, and kWp",
          "fs_horizon": "Comma-separated horizon angles for shading calculations",
          "weather_entity": "Weather entity for cloud compensation (forecast_solar) or physics calculations (manual_physics)",
          "cloud_0_factor": "Clear sky compensation factor (0% cloud cover). Higher values increase forecast on clear days",
          "cloud_100_factor": "Overcast compensation factor (100% cloud cover). Lower values reduce forecast on cloudy days",
          "manual_step_minutes": "Time step for manual forecast calculations (15, 30, or 60 minutes)",
          "manual_diffuse_sky_view_factor": "Fraction of diffuse sky radiation received (0.7-1.0). Lower values account for horizon obstruction",
          "manual_temp_coeff_pct_per_c": "Panel efficiency decrease per degree Celsius above 25°C (typically -0.35 to -0.45)",
          "manual_inverter_ac_kw_cap": "Maximum AC output of your inverter system in kW (leave empty if no limit)",
          "manual_calibration_enabled": "Enable automatic per-plane calibration (future feature, currently not implemented)",
          "pv_power_entity": "Sensor reporting current solar power production (accepts W or kW)",
          "pv_energy_today_entity": "Sensor reporting total solar energy produced today (accepts kWh or Wh)",
          "runtime_source": "Method for calculating baseline house consumption",
          "runtime_counter_entity": "Energy counter sensor for house consumption tracking (kWh). This is the main sensor used for 48-hour baseline calculation. Should be a cumulative counter that increases over time.",
          "runtime_power_entity": "Current power consumption sensor",
          "load_power_entity": "Total house load power for exclusion calculations",
          "batt_power_entity": "Battery power sensor. By default expects positive=charging, negative=discharging. If your sensor shows negative values when charging, enable 'Invert Battery Power Sign' below",
          "batt_power_invert_sign": "Enable if your battery power sensor uses Huawei convention (negative=charging, positive=discharging). Check your sensor: if it shows negative values when battery is charging, enable this option",
          "grid_import_today_entity": "Daily grid import sensor for monitoring",
          "runtime_alpha": "Smoothing factor for exponential moving average (lower=smoother)",
          "runtime_window_min": "Time window in minutes for baseline calculations",
          "runtime_lookback_hours": "Number of hours to look back for calculating baseline from historical data. Set to 0 to disable and use EMA instead. Recommended: 48 hours for good balance",
          "runtime_use_dayparts": "Calculate separate baselines for night (00:00-07:59), day (08:00-15:59), and evening (16:00-23:59) hours for more accurate battery runtime estimates",
          "runtime_exclude_ev": "Exclude EV charging power from house baseline calculation",
          "runtime_exclude_batt_grid": "Exclude battery charging from grid in baseline calculation",
          "runtime_soc_floor": "Minimum battery SOC for runtime calculations",
          "runtime_soc_ceiling": "Maximum battery SOC for runtime calculations",
          "evse_power_sensor": "Sensor reporting current EV charging power (accepts W or kW)",
          "evse_energy_sensor": "Sensor reporting energy charged in current session (accepts kWh or Wh)",
          "evse_total_energy_sensor": "Cumulative energy counter for total EV charging (kWh). Used to exclude EV charging from house baseline calculation.",
          "pv_total_energy_entity": "Cumulative energy counter for total PV generation (kWh). Used to exclude solar charging from battery grid charging baseline calculation.",
          "batt_capacity_entity": "Optional sensor that reports current battery capacity in kWh",
          "batt_energy_charged_today_entity": "Sensor reporting energy charged to battery today (kWh)",
          "batt_energy_discharged_today_entity": "Sensor reporting energy discharged from battery today (kWh)",
          "batt_total_charged_energy_entity": "Cumulative energy counter for total battery charging (kWh). Used to exclude battery grid charging from house baseline calculation.",
          "auto_create_dashboard": "Automatically create a dashboard with energy dispatcher sensors and controls"
        }
      }
    },
    "error": {
      "json_error": "Invalid JSON structure.",
      "invalid_latlon": "Invalid latitude or longitude values."
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Energy Dispatcher Options",
        "description": "Update your Energy Dispatcher configuration. All settings from initial setup are available here.",
        "data": {
          "nordpool_entity": "Nordpool Spot Price Sensor",
          "price_tax": "Energy Tax (SEK/kWh)",
          "price_transfer": "Grid Transfer Fee (SEK/kWh)",
          "price_surcharge": "Supplier Surcharge (SEK/kWh)",
          "price_vat": "VAT Rate (0-1)",
          "price_fixed_monthly": "Fixed Monthly Fee (SEK)",
          "price_include_fixed": "Include Fixed Fee in Hourly Price",
          "batt_cap_kwh": "Battery Capacity (kWh)",
          "batt_soc_entity": "Battery State of Charge Sensor (%)",
          "batt_max_charge_w": "Max Charge Power (W)",
          "batt_max_disch_w": "Max Discharge Power (W)",
          "batt_adapter": "Battery Adapter Type",
          "huawei_device_id": "Huawei Device ID",
          "house_cons_sensor": "House Consumption Sensor (Legacy)",
          "ev_mode": "EV Charging Mode",
          "ev_batt_kwh": "EV Battery Capacity (kWh)",
          "ev_current_soc": "EV Current State of Charge (%)",
          "ev_target_soc": "EV Target State of Charge (%)",
          "evse_start_switch": "EVSE Start Switch/Button Entity",
          "evse_stop_switch": "EVSE Stop Switch/Button Entity",
          "evse_current_number": "EVSE Current Control Entity",
          "evse_min_a": "EVSE Minimum Current (A)",
          "evse_max_a": "EVSE Maximum Current (A)",
          "evse_phases": "EVSE Number of Phases",
          "evse_voltage": "EVSE Voltage (V)",
          "fs_use": "Enable Solar Forecasting",
          "forecast_source": "Forecast Source",
          "fs_apikey": "Forecast.Solar API Key (Optional)",
          "fs_lat": "Latitude",
          "fs_lon": "Longitude",
          "fs_planes": "Solar Panel Array Configuration (JSON)",
          "fs_horizon": "Horizon Values (comma-separated)",
          "weather_entity": "Weather Entity",
          "cloud_0_factor": "Clear Sky Factor (0% clouds)",
          "cloud_100_factor": "Overcast Factor (100% clouds)",
          "manual_step_minutes": "Manual Forecast Time Step",
          "manual_diffuse_sky_view_factor": "Diffuse Sky View Factor",
          "manual_temp_coeff_pct_per_c": "Temperature Coefficient (%/°C)",
          "manual_inverter_ac_kw_cap": "Inverter AC Capacity (kW)",
          "manual_calibration_enabled": "Enable Manual Calibration",
          "pv_power_entity": "PV Current Power Sensor (W or kW)",
          "pv_energy_today_entity": "PV Energy Today Sensor (kWh or Wh)",
          "runtime_source": "Baseline Load Calculation Method",
          "runtime_counter_entity": "House Energy Counter (kWh)",
          "runtime_power_entity": "Power Sensor (W)",
          "load_power_entity": "House Load Power Sensor (W)",
          "batt_power_entity": "Battery Power Sensor (W)",
          "batt_power_invert_sign": "Invert Battery Power Sign",
          "grid_import_today_entity": "Grid Import Today Sensor (kWh)",
          "runtime_alpha": "EMA Smoothing Factor (0-1)",
          "runtime_window_min": "Calculation Window (minutes)",
          "runtime_lookback_hours": "Historical Lookback Period (hours)",
          "runtime_use_dayparts": "Use Time-of-Day Weighting",
          "runtime_exclude_ev": "Exclude EV Charging from Baseline",
          "runtime_exclude_batt_grid": "Exclude Battery Grid Charging from Baseline",
          "runtime_soc_floor": "Battery SOC Floor (%)",
          "runtime_soc_ceiling": "Battery SOC Ceiling (%)",
          "evse_power_sensor": "EVSE Charging Power Sensor (W or kW)",
          "evse_energy_sensor": "EVSE Session Energy Sensor (kWh or Wh)",
          "evse_total_energy_sensor": "EVSE Total Energy Counter (kWh)",
          "pv_total_energy_entity": "PV Total Energy Counter (kWh)",
          "batt_capacity_entity": "Battery Capacity Sensor (kWh)",
          "batt_energy_charged_today_entity": "Battery Energy Charged Today (kWh)",
          "batt_energy_discharged_today_entity": "Battery Energy Discharged Today (kWh)",
          "batt_total_charged_energy_entity": "Battery Total Charged Energy Counter (kWh)",
          "auto_create_dashboard": "Auto-create Dashboard"
        }
      }
    }
  },
  "entity": {
    "sensor": {
      "plan_summary": {
        "name": "Plan summary"
      },
      "price_schedule": {
        "name": "Price schedule"
      },
      "solar_forecast": {
        "name": "Solar forecast"
      },
      "battery_status": {
        "name": "Battery status"
      },
      "ev_status": {
        "name": "EV status"
      }
    },
    "switch": {
      "auto_dispatch": {
        "name": "Auto dispatch"
      }
    },
    "button": {
      "force_battery_charge": {
        "name": "Force battery charge"
      },
      "force_battery_discharge": {
        "name": "Force battery discharge"
      }
    }
  }
}